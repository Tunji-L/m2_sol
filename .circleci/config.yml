version: 2.1

jobs:
  # build:
  #   docker:
  #     - image: circleci/node:13.8.0
    
  #   steps:
  #     - checkout
  #     - run: npm i
  #     - save_cache:
  #         key: "npm-packages"
  #         paths:
  #           - src/node_modules
  #     - run: npm run lint

  # test:
  #   docker:
  #     - image: circleci/node:13.8.0

  #   steps:
  #     - checkout
  #     - restore_cache:
  #         key: "npm-packages"
  #     - run: npm i
  #     - run: npm run test

  # analyze:
  #   docker:
  #     - image: circleci/node:13.8.0

  #   steps:
  #     - checkout
  #     - restore_cache:
  #         key: "npm-packages"
  #     - run: npm audit

  create_infrastructure:
    docker: 
      - image: amazon/aws-cli

    steps:
      - checkout
      - run:
          name: Create cloud formation stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1

  inventory:
    docker:
      - image: amazon/aws-cli

    steps:
      - run:
          name: "generate inventory file"
          command: |
            mkdir -p workspace
            echo "[all]" > /tmp/workspace/inventory.txt
            aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --filters "Name=tag:Project,Values=Udacity" \
            --output text >> /tmp/workspace/inventory.txt
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - inventory.txt

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["44:cc:2d:3c:4d:03:ab:c1:b7:13:4b:be:23:f8:2e:47"]
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: instal dependencies
          command: |
            apk add --update ansible
      - run:
          name: configure server
          command: |
            ansible-playbook -i /tmp/workspace/inventory.txt main_remote.yml

workflows:
  my_workflow:
    jobs:
  #     - build
  #     - test:
  #         requires:
  #           - build
  #     - analyze:
  #         requires:
  #           - test
        - create_infrastructure
        - inventory:
            requires:
              - create_infrastructure
        - configure_infrastructure:
            requires:
              - inventory