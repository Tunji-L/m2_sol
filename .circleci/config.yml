version: 2.1

jobs:
  # build:
  #   docker:
  #     - image: circleci/node:13.8.0
    
  #   steps:
  #     - checkout
  #     - run: npm i
  #     - save_cache:
  #         key: "npm-packages"
  #         paths:
  #           - src/node_modules
  #     - run: npm run lint

  # test:
  #   docker:
  #     - image: circleci/node:13.8.0

  #   steps:
  #     - checkout
  #     - restore_cache:
  #         key: "npm-packages"
  #     - run: npm i
  #     - run: npm run test

  # analyze:
  #   docker:
  #     - image: circleci/node:13.8.0

  #   steps:
  #     - checkout
  #     - restore_cache:
  #         key: "npm-packages"
  #     - run: npm audit

  # create_infrastructure:
  #   docker: 
  #     - image: amazon/aws-cli

  #   steps:
  #     - checkout
  #     - run:
  #         name: Create cloud formation stack
  #         command: |
  #           aws cloudformation deploy \
  #             --template-file template.yml \
  #             --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
  #             --region us-east-1

  # inventory:
  #   docker:
  #     - image: amazon/aws-cli

  #   steps:
  #     - run:
  #         name: "unarchiving"
  #         command: |
  #           yum install tar -y
  #     - run:
  #         name: "generate inventory file"
  #         command: |
  #           mkdir -p ~/cach
  #           echo "[all]" > ~/cach/inventory.txt
  #           aws ec2 describe-instances \
  #           --query 'Reservations[*].Instances[*].PublicIpAddress' \
  #           --filters "Name=tag:Project,Values=udacity" \
  #           --output text >> ~/cach/inventory.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - inventory.txt

  # configure_infrastructure:
  #   docker:
  #     - image: python:3.7-alpine3.11

  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["05:2e:11:e1:75:a5:8a:e2:5b:d0:77:de:91:12:80:e8"]
  #     - run:
  #         name: "unarchiving"
  #         command: |
  #           pip install tar.gz
  #     # - attach_workspace:
  #     #     at: ~/
  #     - run:
  #         name: install dependencies
  #         command: |
  #           apk add --update ansible
  #     - run:
  #         name: configure server
  #         command: |
  #           ansible-playbook -i ~/inventory.txt main_remote.yml

  smoke_test:
    docker: 
      - image: alpine:latest

    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL}
            then
              return 0
            else:
              return 1
            fi

workflows:
  my_workflow:
    jobs:
      # - build
      # - test:
      #     requires:
      #       - build
      # - analyze:
      #     requires:
      #       - test
      #   - create_infrastructure
      #   - inventory:
      #       requires:
      #         - create_infrastructure
      #   - configure_infrastructure:
      #       requires:
      #         - inventory
      - smoke_test